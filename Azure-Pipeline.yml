trigger:
- '*'
resources:
  repositories:
  - repository: test-scripts
    type: git
    name: test-scripts

variables:
- group: Script execution variables
- name: ScriptFolder

jobs:
- job: ExecuteSQLScript
  displayName: 'Execute SQL Script'
  pool:
    vmImage: 'windows-latest'

  steps:
  - checkout: test-scripts
  - task: PowerShell@2
    displayName: 'Execute PowerShell Script'
    inputs:
      targetType: 'inline'
      script: |
        $server = "$(ServerName)"
        $database = "$(DatabaseName)"
        $username = "$(Username)"
        $password = "$(Password)"

        Write-Host "Script folder: $(env:SCRIPTFOLDER)"
        Write-Host "Server: $server"
        Write-Host "Database: $database"
        Write-Host "Username: $username"
        Write-Host "Password: $password"
        
        # Read the SQL script content
        $sqlScript = Get-Content -Path $(env:SCRIPTFOLDER)/$(env:SCRIPTNAME) -Raw

        Write-Host "Executing SQL script: $(env:SCRIPTNAME)"
        Write-Host "SQL script content:"
        Write-Host $sqlScript

        try {
            # Attempt to execute the SQL script
            Invoke-Sqlcmd -ServerInstance $server -Database $database -Username $username -Password $password -Query $sqlScript

            Write-Host "SQL script executed successfully."
        }
        catch {
            Write-Host "Error executing SQL script: $_"
            exit 1 # Fail the pipeline if there's an error
        }
